name: 'Reliably Experiment Action'
description: 'Run a Reliably Chaos Toolkit experiment'
author: 'Reliably'
branding:
  icon: "check-circle"
  color: "red"
inputs:
  github-token:
    description: "The GitHub token to commit the results"
    required: true
  reliably-agent-token:
    description: "Reliably agent authentication token"
    required: true
  working-dir:
    description: "The directory where the plan will be run from"
    required: true
  experiment-url:
    description: "The full URL to the experiment"
    required: true
  python-version:
    description: "The python version to use to run the Chaos Toolkit"
    required: false
    default: "3.10"
  reliably-host:
    description: "The hostname of the Reliably server"
    required: false
    default: "app.reliably.com"
runs:
  using: "composite"
  steps:
    - name: Configure Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
    
    - name: Install Chaos Toolkit
      shell: bash
      run: |
        python -m pip install -q --prefer-binary -U wheel setuptools pip
        python -m pip install -q --prefer-binary chaostoolkit \
          chaostoolkit-aws \
          chaostoolkit-azure \
          chaostoolkit-kubernetes \
          chaostoolkit-google-cloud-platform \
          chaostoolkit-humio \
          chaostoolkit-prometheus \
          chaostoolkit-toxiproxy \
          chaostoolkit-opentracing \
          chaostoolkit-istio \
          chaostoolkit-wiremock \
          chaostoolkit-gandi \
          chaostoolkit-dynatrace \
          chaostoolkit-k6 \
          chaostoolkit-addons \
          chaostoolkit-grafana \
          chaostoolkit-slack \
          git+https://github.com/chaostoolkit-incubator/chaostoolkit-reliably@master#chaostoolkit-reliably \
          opentelemetry-api \
          opentelemetry-sdk \
          opentelemetry-exporter-otlp-proto-http \
          opentelemetry-propagator-b3 \
          opentelemetry-semantic-conventions

    - name: Add repository top-level ~/bin directory to the PATH
      shell: bash
      run: |
        if [[ -d "~/bin" ]]; then
          echo "Adding ~/bin to PATH"
          echo "PATH=$PATH:~/bin" >> $GITHUB_ENV
        fi

    - name: Create directory to hold results and logs
      shell: bash
      run: mkdir -p ${{ inputs.working-dir }}

    - name: Inject Reliably environment variables, if any, into workflow
      shell: bash
      run: |
        echo "Loading ${{ inputs.working-dir }}/.reliably.env into GITHUB_ENV"
        cd ${{ inputs.working-dir }}
        if [[ -f "./.reliably.env" ]]; then
          while IFS= read -r line
          do
            [[ $line =~ ^#.* ]] && continue
            echo "$line" >> $GITHUB_ENV
          done < "./.reliably.env"
        fi

    - name: Execute Reliably Experiment
      working-directory: ${{ inputs.working-dir }}
      shell: bash
      run: |
        [[ -f "./.reliably.env" ]] && source ./.reliably.env
        chaos run --rollback-strategy=always ${{ inputs.experiment-url }}
      env:
        CHAOSTOOLKIT_LOADER_AUTH_BEARER_TOKEN: ${{ inputs.reliably-agent-token }}
        RELIABLY_TOKEN: ${{ inputs.reliably-agent-token }}
        RELIABLY_HOST: ${{ inputs.reliably-host }}

    - name: Store results
      working-directory: ${{ inputs.working-dir }}
      shell: bash
      run: |
        export EXECUTION_URL=$(cat journal.json | jq -r '.experiment.extensions[] | select(.name=="reliably") | .execution_url')

        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git add .
        git commit -s -m "Plan ${{ env.PLAN_ID }}" -m "Visit ${EXECUTION_URL}"
        git pull --rebase origin main
        git push
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GITHUB_ACTOR: ${{ github.actor }}
